// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: properties.sql

package database

import (
	"context"
	"time"
)

const createProperty = `-- name: CreateProperty :one
INSERT INTO properties (
    id,
    bedrooms,
    bathrooms,
    description,
    address,
    latitude,
    longitude,
    type,
    listing_update_reason,
    listing_update_date,
    price_amount,
    price_currency_code,
    estate_agent_telephone,
    estate_agent_name
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
RETURNING bedrooms, bathrooms, description, address, latitude, longitude, type, listing_update_reason, listing_update_date, price_amount, price_currency_code, estate_agent_telephone, estate_agent_name, created_at, id
`

type CreatePropertyParams struct {
	ID                   int32
	Bedrooms             int32
	Bathrooms            int32
	Description          string
	Address              string
	Latitude             float64
	Longitude            float64
	Type                 string
	ListingUpdateReason  string
	ListingUpdateDate    time.Time
	PriceAmount          int32
	PriceCurrencyCode    string
	EstateAgentTelephone string
	EstateAgentName      string
}

func (q *Queries) CreateProperty(ctx context.Context, arg CreatePropertyParams) (Property, error) {
	row := q.db.QueryRowContext(ctx, createProperty,
		arg.ID,
		arg.Bedrooms,
		arg.Bathrooms,
		arg.Description,
		arg.Address,
		arg.Latitude,
		arg.Longitude,
		arg.Type,
		arg.ListingUpdateReason,
		arg.ListingUpdateDate,
		arg.PriceAmount,
		arg.PriceCurrencyCode,
		arg.EstateAgentTelephone,
		arg.EstateAgentName,
	)
	var i Property
	err := row.Scan(
		&i.Bedrooms,
		&i.Bathrooms,
		&i.Description,
		&i.Address,
		&i.Latitude,
		&i.Longitude,
		&i.Type,
		&i.ListingUpdateReason,
		&i.ListingUpdateDate,
		&i.PriceAmount,
		&i.PriceCurrencyCode,
		&i.EstateAgentTelephone,
		&i.EstateAgentName,
		&i.CreatedAt,
		&i.ID,
	)
	return i, err
}

const getPropertyById = `-- name: GetPropertyById :one

SELECT bedrooms, bathrooms, description, address, latitude, longitude, type, listing_update_reason, listing_update_date, price_amount, price_currency_code, estate_agent_telephone, estate_agent_name, created_at, id FROM properties
WHERE id=$1
`

func (q *Queries) GetPropertyById(ctx context.Context, id int32) (Property, error) {
	row := q.db.QueryRowContext(ctx, getPropertyById, id)
	var i Property
	err := row.Scan(
		&i.Bedrooms,
		&i.Bathrooms,
		&i.Description,
		&i.Address,
		&i.Latitude,
		&i.Longitude,
		&i.Type,
		&i.ListingUpdateReason,
		&i.ListingUpdateDate,
		&i.PriceAmount,
		&i.PriceCurrencyCode,
		&i.EstateAgentTelephone,
		&i.EstateAgentName,
		&i.CreatedAt,
		&i.ID,
	)
	return i, err
}
